{"version":3,"sources":["Components/Shared/Switch/switch.js","Components/content.js","Components/App/App.js","Components/App/Counter/Counter.js","Components/App/Header/Header.js","Components/App/Footer/Footer.js","Components/App/Helper/Helper.js","Components/App/Modal/Modal.js","Components/App/Intro/Intro.js","Components/App/Gamepad/Button/Button.js","Components/App/Gamepad/Gamepad.js","Components/App/Highscores/Record/Record.js","Components/App/Highscores/Highscores.js","Components/App/Counter/HelpMeBtn/question-diamond-fill.svg","Components/App/Counter/HelpMeBtn/HelpMeBtn.js","Components/App/Options/Wheel/Wheel.js","Components/App/Options/Options.js","index.js"],"names":["Switch","props","config","unit","option","defaultValue","label","on","off","gameConfig","JSON","parse","localStorage","getItem","checkedValue","className","htmlFor","id","type","onChange","handleSwitch","checked","toUpperCase","content","header","nav","intro","en","ru","game","options","highscores","counter","timeLeft","totalCorrect","totalIncorrect","title","timer","hints","nosimple","questAmount","text","item1","item2","item3","item4","btn","signs","values","App","signHelper","tasksAmount","timeForTask","timerInterval","wrongAnswers","defaultGameConfig","langEng","timerOn","hintsOn","noSimpleOn","initialState","helpVisibility","tasks","generateTasks","totalTaken","currentQuestionNo","isDone","Math","floor","timeResult","playerName","Object","assign","state","handlePassedTask","bind","getRandomQuestion","handleSubmitScore","restartGame","handleHelpMe","handlePlayerName","getGameScore","handleWheel","name","this","setState","setItem","stringify","clearInterval","console","log","gameFactor","ceil","e","preventDefault","scoreRecords","push","score","date","Date","now","window","location","task","answer","setInterval","taskClone","passed","result","correct","newStateTasks","Array","from","filter","item","formula","map","correctAnswer","yourAnswer","num","allResults","formulaHelper","i","keys","sign","random","length","value1","value2","join","includes","eval","isArray","toString","valueOf","Infinity","falseResults","j","randomIndex","randomQuestionIndex","lang","defaultLang","exact","path","render","handleCompletedGame","timerIsOn","isVisible","modalIsVisible","Component","Counter","timeFormatter","Intl","NumberFormat","minimumIntegerDigits","minsLeft","format","parseInt","secsLeft","Header","navPanelIsVisible","handleNavPanel","to","onClick","Footer","href","Helper","Modal","refreshInput","_input","focus","value","index","onSubmit","target","ref","Intro","Button","question","onMouseUp","Gamepad","answersIndexes","randomizeAnswers","randomIndexArray","handlePushedBtn","PureComponent","Record","locale","dateStr","DateTimeFormat","hour","minute","year","month","day","Highscores","record","key","HelpMeBtn","style","backgroundImage","questionIco","Wheel","_range","min","max","step","Options","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.deddb9ec.chunk.js","sourcesContent":["import \"./switch.css\";\n\nexport default function Switch(props) {\n  const { unit, option, defaultValue, label = { on: \"I\", off: \"0\" } } = props.config;\n  const gameConfig = JSON.parse(localStorage.getItem(\"gameConfig\"));\n  const checkedValue = gameConfig ? gameConfig[props.config.option] : defaultValue;\n  return (\n    <label className=\"switch__container\" htmlFor={unit}>\n      <input\n        id={unit}\n        className=\"switch\"\n        type=\"checkbox\"\n        onChange={() => {\n          props.handleSwitch(option);\n        }}\n        checked={!checkedValue}\n      ></input>\n      <div className=\"custom-switch\">\n        <span className=\"switch__label\">{label.on.toUpperCase()}</span>\n        <span className=\"switch__label\">{label.off.toUpperCase()}</span>\n      </div>\n    </label>\n  );\n}\n","export const content = {\n  header: {\n    nav: {\n      intro: { en: \"Intro\", ru: \"Вступление\" },\n      game: { en: \"Game\", ru: \"Игра\" },\n      options: { en: \"Options\", ru: \"Опции\" },\n      highscores: { en: \"Highscores\", ru: \"Рекорды\" },\n    },\n  },\n  counter: {\n    timeLeft: { en: \"Time left\", ru: \"Времени осталось\" },\n    totalCorrect: { en: \"Correct answers\", ru: \"Верных ответов\" },\n    totalIncorrect: { en: \"Incorrect answers\", ru: \"Неверных ответов\" },\n  },\n  highscores: {\n    title: { en: \"Highscores\", ru: \"Рекорды\" },\n  },\n  options: {\n    title: { en: \"Options\", ru: \"Опции\" },\n    timer: { en: \"Timer\", ru: \"Обратный отсчет\" },\n    hints: { en: \"Hints\", ru: \"Подсказки\" },\n    nosimple: { en: \"Remove simple questions ...in construction...\", ru: \"Без простых вопросов ...в разработке...\" },\n    questAmount: { en: \"Amount of questions ...in construction...\", ru: \"Количество вопросов ...в разработке...\" },\n  },\n  intro: {\n    title: { en: \"Introduction\", ru: \"Вступление\" },\n    text: {\n      en: \"Below you can find a brief guide for the game.\",\n      ru: \"Ниже вы найдете короткую интсрукцию по игре.\",\n    },\n    item1: {\n      en: 'You can directly go to the \"Game\" page (or press the \"Start\" button below) and challenge yourself in how well you know types conversions in JS.',\n      ru: 'Вы можете сразу перейти на вкладку \"Игра\" (или нажать кнупку \"Старт\" ниже) и проверить свои знания преобразования данных JS.',\n    },\n    item2: {\n      en: \"By default the game has timer on and hints off. However, you can easily adjust options to your preferences.\",\n      ru: 'По умолчанию игра будет проходить в включенным обратным отсчетом и выключенными подсказками. Однако, перейдя на вкладку \"Опции\", вы можете изменить настройки игры на свое усмотрение.',\n    },\n    item3: {\n      en: \"As soon as you completed the game you will be offered to enter your name and save the score.\",\n      ru: \"По окончанию игры вам будет предложено ввести свое имя и сохранить результат.\",\n    },\n    item4: {\n      en: '\"Highscores\" page is for your scores.',\n      ru: 'На вкладке \"Рекорды\" вы найдете результаты своих предыдущих попыток.',\n    },\n    btn: { en: \"Start\", ru: \"Старт\" },\n  },\n};\n\nexport const signs = {\n  \"+\": \"\",\n  \"-\": \"\",\n  \"*\": \"\",\n  \"/\": \"\",\n  \"||\": `Оператор \"||\" - логическое ИЛИ. Приблизительно эквивалентно \"a ? a : b\". Результат всегда совпадает со значением одного из операндов,\n          а не с результатом проверки условия. P.S. \"Ложные значения\": \"\", undefined, null, false, +0, -0, NaN`,\n  \"&&\": `Оператор \"&&\" - логическое И. Приблизительно эквивалентно \"a ? b : a\". Результат всегда совпадает со значением одного из операндов,\n          а не с результатом проверки условия. P.S. \"Ложные значения\": \"\", undefined, null, false, +0, -0, NaN`,\n  \"==\": `\"==\" - Нестрогое равенство. Разрешает преобразование типа.`,\n  \"===\": `\"===\" - Строгое равенство. Запрещает преобразование типа.`,\n};\n\nexport const values = [\n  '\"\"',\n  \"{}\",\n  \"[]\",\n  \"[[]]\",\n  \"NaN\",\n  \"[0]\",\n  \"[1]\",\n  \"1\",\n  \"-1\",\n  \"null\",\n  \"undefined\",\n  \"Infinity\",\n  \"-Infinity\",\n  \"0\",\n  \"-0\",\n  \"true\",\n  \"false\",\n  '\"true\"',\n  '\"false\"',\n  '~\"{}\".indexOf(\"__proto__\")',\n  \"~~-0.9\",\n];\n","/* eslint-disable no-eval */\nimport \"./app.css\";\nimport React, { Component } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Gamepad from \"./Gamepad/Gamepad\";\nimport Counter from \"./Counter/Counter\";\nimport Header from \"./Header/Header\";\nimport Footer from \"./Footer/Footer\";\nimport Helper from \"./Helper/Helper\";\nimport Modal from \"./Modal/Modal\";\nimport Highscores from \"./Highscores/Highscores\";\nimport Intro from \"./Intro/Intro\";\nimport HelpMeBtn from \"./Counter/HelpMeBtn/HelpMeBtn\";\nimport { content, signs, values } from \"../content\";\nimport Options from \"./Options/Options\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.signs = signs;\n    this.values = values;\n    this.signHelper = {\n      \"||\": `Оператор \"||\" - логическое ИЛИ. Приблизительно эквивалентно \"a ? a : b\". Результат всегда совпадает со значением одного из операндов,\n          а не с результатом проверки условия. P.S. \"Ложные значения\": \"\", undefined, null, false, +0, -0, NaN`,\n      \"&&\": `Оператор \"&&\" - логическое И. Приблизительно эквивалентно \"a ? b : a\". Результат всегда совпадает со значением одного из операндов,\n          а не с результатом проверки условия. P.S. \"Ложные значения\": \"\", undefined, null, false, +0, -0, NaN`,\n      \"==\": `\"==\" - Нестрогое равенство. Разрешает преобразование типа.`,\n      \"===\": `\"===\" - Строгое равенство. Запрещает преобразование типа.`,\n    };\n    this.tasksAmount = 25;\n    this.timeForTask = 6;\n    this.timerInterval = 0;\n    this.wrongAnswers = [];\n    this.content = content;\n    this.defaultGameConfig = { langEng: true, timerOn: true, hintsOn: true, noSimpleOn: false, questAmount: 15 };\n\n    this.initialState = {\n      helpVisibility: false,\n      tasks: this.generateTasks(this.tasksAmount),\n      totalTaken: 0,\n      totalCorrect: 0,\n      totalIncorrect: 0,\n      currentQuestionNo: 0,\n      isDone: false,\n      timeLeft: Math.floor((this.tasksAmount - 1) / 2) * this.timeForTask,\n      timeResult: 0,\n      playerName: \"Player\",\n      gameConfig: JSON.parse(localStorage.getItem(\"gameConfig\")) || Object.assign({}, this.defaultGameConfig),\n    };\n\n    this.state = Object.assign({}, this.initialState);\n\n    this.handlePassedTask = this.handlePassedTask.bind(this);\n    this.getRandomQuestion = this.getRandomQuestion.bind(this);\n    this.handleSubmitScore = this.handleSubmitScore.bind(this);\n    this.restartGame = this.restartGame.bind(this);\n    this.handleHelpMe = this.handleHelpMe.bind(this);\n    this.handlePlayerName = this.handlePlayerName.bind(this);\n    this.handleSwitch = this.handleSwitch.bind(this);\n    this.getGameScore = this.getGameScore.bind(this);\n    this.handleWheel = this.handleWheel.bind(this);\n  }\n\n  handlePlayerName(name) {\n    this.setState({ playerName: name });\n  }\n\n  handleSwitch(option) {\n    const gameConfig = this.state.gameConfig;\n    gameConfig[option] = !this.state.gameConfig[option];\n    this.setState(gameConfig);\n    localStorage.setItem(\"gameConfig\", JSON.stringify(gameConfig));\n\n    this.restartGame();\n    clearInterval(this.timerInterval, 1000);\n  }\n\n  handleWheel() {\n    console.log(\"handle wheel\");\n  }\n\n  handleHelpMe() {\n    if (this.state.helpVisibility === false && this.state.totalTaken !== 0) {\n      this.setState({ timeLeft: this.state.timeLeft - this.timeForTask });\n    }\n    this.setState({ helpVisibility: !this.state.helpVisibility });\n  }\n\n  restartGame() {\n    this.setState({ ...this.initialState });\n    this.setState({\n      tasks: this.generateTasks(this.tasksAmount),\n      timeLeft: Math.floor((this.tasksAmount - 1) / 2) * this.timeForTask,\n    });\n  }\n\n  getGameScore() {\n    let gameFactor = 1;\n    gameFactor *= this.state.gameConfig.hintsOn ? 0.7 : 1;\n    gameFactor *= this.state.gameConfig.timerOn ? 1.5 : 1;\n    gameFactor *= this.state.gameConfig.noSimpleOn ? 1.1 : 1;\n    return this.state.timeResult > 0 ? Math.ceil(this.state.timeResult * this.state.totalCorrect * gameFactor) : 0;\n  }\n\n  handleSubmitScore(e) {\n    e.preventDefault();\n    const scoreRecords = JSON.parse(localStorage.getItem(\"scoreRecords\")) ?? [];\n\n    scoreRecords.push({\n      name: this.state.playerName,\n      score: this.getGameScore(),\n      date: Date.now(),\n    });\n\n    localStorage.setItem(\"scoreRecords\", JSON.stringify(scoreRecords));\n\n    this.restartGame();\n    window.location = \"/#/highscores\";\n  }\n\n  handlePassedTask(e, task, answer) {\n    this.setState({ helpVisibility: false });\n\n    if (this.state.isDone) {\n      return;\n    }\n\n    if (this.state.gameConfig.timerOn === true && this.state.totalTaken === 0) {\n      this.timerInterval = setInterval(() => {\n        this.setState({ timeLeft: this.state.timeLeft - 1 });\n        if (this.state.timeLeft <= 0) {\n          this.setState({ isDone: true, timeLeft: 0, timeResult: 0 });\n          clearInterval(this.timerInterval, 1000);\n        }\n      }, 1000);\n    }\n\n    const taskClone = Object.assign({}, task);\n    let totalCorrect = this.state.totalCorrect;\n    let totalIncorrect = this.state.totalIncorrect;\n    let timeLeft = this.state.timeLeft;\n    let totalTaken = this.state.totalTaken + 1;\n    let isDone = false;\n\n    taskClone.passed = true;\n    taskClone.answer = answer;\n    if (answer === taskClone.result) {\n      taskClone.correct = true;\n      totalCorrect++;\n      timeLeft += this.timeForTask;\n    } else {\n      taskClone.correct = false;\n      totalIncorrect++;\n      timeLeft -= this.timeForTask;\n    }\n\n    isDone = totalTaken === this.tasksAmount ? true : false;\n    if (isDone) {\n      clearInterval(this.timerInterval, 1000);\n    }\n\n    this.setState({\n      totalTaken: totalTaken,\n      timeLeft: timeLeft,\n      timeResult: timeLeft,\n      totalCorrect: totalCorrect,\n      totalIncorrect: totalIncorrect,\n      isDone: isDone,\n    });\n\n    let newStateTasks = Array.from(this.state.tasks);\n    newStateTasks = newStateTasks.filter(item => {\n      return item.formula !== taskClone.formula;\n    });\n    newStateTasks = [...newStateTasks, taskClone];\n\n    this.wrongAnswers = newStateTasks\n      .filter(task => task.correct === false)\n      .map(task => {\n        return { formula: task.formula, correctAnswer: task.result, yourAnswer: task.answer };\n      });\n\n    this.setState({\n      tasks: newStateTasks,\n    });\n  }\n\n  generateTasks(num) {\n    const tasks = [\n      {\n        passed: false,\n        correct: null,\n        formula: \"[] === []\",\n        result: \"false\",\n        allResults: [\"true\", \"false\", \"[]\", '\"\"'],\n        formulaHelper: \"Первый простой пример. Ответ на него начнет отсчет времени. Удачи.\",\n      },\n    ];\n    for (let i = 0; i < num - 1; i++) {\n      const signs = Object.keys(this.signs);\n      const sign = signs[Math.floor(Math.random() * signs.length)];\n      const value1 = this.values[Math.floor(Math.random() * this.values.length)];\n      const value2 = this.values[Math.floor(Math.random() * this.values.length)];\n      const formula = [value1, sign, value2].join(\" \");\n\n      let formulaHelper = this.signs[sign] || \"Давай погуглим...\";\n\n      let result = [\"+\", \"-\"].includes(sign) ? eval(`${formula}`) : eval(`(${formula})`);\n\n      if (typeof result === \"object\" && result !== null && !Array.isArray(result)) {\n        result.toString = function () {\n          return \"{}\";\n        };\n        result.valueOf = function () {\n          return 0;\n        };\n      }\n\n      if (result === \"\") {\n        result = '\"\"';\n      } else if (typeof result === \"string\") {\n        result = '\"' + result + '\"';\n      } else if (Array.isArray(result) && Array.isArray(result[0]) && result.length === 1) {\n        result = \"[[]]\";\n      } else if (Array.isArray(result)) {\n        result = \"[\" + result + \"]\";\n      } else if (1 / result === -Infinity) {\n        result = \"-0\";\n      } else {\n        result = `${result}`;\n      }\n\n      const falseResults = [];\n      let j = 0;\n      if (sign === \"==\" || sign === \"===\") {\n        falseResults.push(result === \"true\" ? \"false\" : \"true\");\n        j = 1;\n      }\n\n      for (; j < 3; j++) {\n        const randomIndex = Math.floor(Math.random() * this.values.length);\n        if (falseResults.includes(this.values[randomIndex]) || this.values[randomIndex] === result) {\n          j--;\n        } else {\n          falseResults.push(this.values[randomIndex]);\n        }\n      }\n\n      tasks.push({\n        passed: false,\n        correct: null,\n        formula: formula,\n        result: result,\n        allResults: [...falseResults, result],\n        formulaHelper,\n      });\n    }\n    return tasks;\n  }\n\n  getRandomQuestion() {\n    const tasksAmount = this.state.tasks.length;\n    const randomQuestionIndex = Math.floor(Math.random() * tasksAmount);\n    return this.state.tasks[randomQuestionIndex].passed\n      ? this.getRandomQuestion()\n      : this.state.tasks[randomQuestionIndex];\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Header\n          content={this.content}\n          lang={this.state.gameConfig.langEng}\n          handleSwitch={this.handleSwitch}\n          defaultLang={this.defaultGameConfig.langEng}\n        />\n        <HashRouter>\n          <main className=\"main-container\">\n            <Route\n              exact\n              path=\"/game\"\n              render={props => (\n                <div className=\"gamepad__container section-container\">\n                  <Gamepad\n                    isDone={this.state.isDone}\n                    tasks={this.state.tasks}\n                    currentQuestionNo={this.state.currentQuestionNo}\n                    handlePassedTask={this.handlePassedTask}\n                    handleCompletedGame={this.handleCompletedGame}\n                  />\n                  <div className=\"info-container\">\n                    <Counter\n                      content={this.content}\n                      langEng={this.state.gameConfig.langEng}\n                      totalCorrect={this.state.totalCorrect}\n                      totalIncorrect={this.state.totalIncorrect}\n                      timeLeft={this.state.timeLeft}\n                      timerIsOn={this.state.gameConfig.timerOn}\n                    />\n                    <HelpMeBtn handleHelpMe={this.handleHelpMe} hintsOn={this.state.gameConfig.hintsOn} />\n                    <Helper\n                      formulaHelper={this.state.tasks[this.state.currentQuestionNo].formulaHelper}\n                      isVisible={this.state.helpVisibility}\n                      handleHelpMe={this.handleHelpMe}\n                    />\n                  </div>\n                </div>\n              )}\n            />\n            <Route\n              path=\"/highscores\"\n              render={props => <Highscores content={this.content} langEng={this.state.gameConfig.langEng} />}\n            />\n\n            <Route\n              path=\"/options\"\n              render={props => (\n                <Options\n                  content={this.content}\n                  langEng={this.state.gameConfig.langEng}\n                  handleSwitch={this.handleSwitch}\n                  handleWheel={this.handleWheel}\n                  defaultGameConfig={this.defaultGameConfig}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/\"\n              render={props => <Intro content={this.content} langEng={this.state.gameConfig.langEng} />}\n            />\n          </main>\n        </HashRouter>\n        <Footer />\n        <Modal\n          wrongAnswers={this.wrongAnswers}\n          timeLeft={this.timeLeft}\n          timeResult={this.state.timeResult}\n          totalTaken={this.state.totalTaken}\n          totalCorrect={this.state.totalCorrect}\n          totalIncorrect={this.state.totalIncorrect}\n          tasksAmount={this.tasksAmount}\n          modalIsVisible={this.state.isDone}\n          handleSubmitScore={this.handleSubmitScore}\n          handlePlayerName={this.handlePlayerName}\n          getGameScore={this.getGameScore}\n        />\n      </div>\n    );\n  }\n}\n","import \"./counter.css\";\n\nexport default function Counter(props) {\n  const timeFormatter = Intl.NumberFormat(\"GB\", { minimumIntegerDigits: 2 });\n  const lang = props.langEng ? \"en\" : \"ru\";\n\n  let minsLeft = timeFormatter.format(parseInt(props.timeLeft / 60));\n  let secsLeft = timeFormatter.format(props.timeLeft - minsLeft * 60);\n  let timeLeft = \"\";\n\n  if (props.timerIsOn) {\n    if (props.timeLeft > 0) {\n      minsLeft = timeFormatter.format(parseInt(props.timeLeft / 60));\n      secsLeft = timeFormatter.format(props.timeLeft - minsLeft * 60);\n      timeLeft = `${minsLeft}:${secsLeft}`;\n    } else {\n      timeLeft = \"00:00\";\n    }\n  } else {\n    timeLeft = <span>&infin;</span>;\n  }\n  return (\n    <div className=\"counter__container\">\n      <div className=\"counter__timer\">\n        {props.content.counter.timeLeft[lang] + \": \"}\n        <span>{timeLeft}</span>\n      </div>\n      <h2 className=\"counter__item\">\n        {props.content.counter.totalCorrect[lang]}: {props.totalCorrect}\n      </h2>\n      <h2 className=\"counter__item\">\n        {props.content.counter.totalIncorrect[lang]}: {props.totalIncorrect}\n      </h2>\n    </div>\n  );\n}\n","import \"./header.css\";\nimport { HashRouter, NavLink } from \"react-router-dom\";\nimport { Component } from \"react\";\nimport Switch from \"../../Shared/Switch/switch\";\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      navPanelIsVisible: false,\n    };\n\n    this.defaultLang = this.props.defaultLang ? \"en\" : \"ru\";\n\n    this.handleNavPanel = this.handleNavPanel.bind(this);\n  }\n\n  handleNavPanel() {\n    this.setState({ navPanelIsVisible: !this.state.navPanelIsVisible });\n  }\n\n  render() {\n    this.lang = this.props.lang ? \"en\" : \"ru\";\n\n    return (\n      <HashRouter>\n        <header className=\"header\">\n          <span className=\"header__logo logo\">\n            <NavLink className=\"header__logo-link logo-link\" exact to=\"/\">\n              JS Types Game\n            </NavLink>\n          </span>\n          <div className=\"nav__btn-container\" onClick={this.handleNavPanel}>\n            <span className=\"nav__btn\"></span>\n          </div>\n          <nav\n            className={this.state.navPanelIsVisible ? \"nav__container nav__container--visible\" : \"nav__container\"}\n            onClick={this.handleNavPanel}\n          >\n            <ul className=\"nav__list\">\n              <li className=\"nav__item\">\n                <NavLink className=\"nav__link\" exact to=\"/\">\n                  {this.props.content.header.nav.intro[this.lang]}\n                </NavLink>\n              </li>\n              <li className=\"nav__item\">\n                <NavLink className=\"nav__link\" to=\"/game\">\n                  {this.props.content.header.nav.game[this.lang]}\n                </NavLink>\n              </li>\n              <li className=\"nav__item\">\n                <NavLink className=\"nav__link\" to=\"/options\">\n                  {this.props.content.header.nav.options[this.lang]}\n                </NavLink>\n              </li>\n              <li className=\"nav__item\">\n                <NavLink className=\"nav__link\" to=\"/highscores\">\n                  {this.props.content.header.nav.highscores[this.lang]}\n                </NavLink>\n              </li>\n              <li className=\"nav__item\">\n                <div className=\"nav__item--switch\">\n                  <Switch\n                    handleSwitch={this.props.handleSwitch}\n                    config={{\n                      unit: \"language\",\n                      option: \"langEng\",\n                      defaultValue: this.defaultLang,\n                      label: { on: \"en\", off: \"ru\" },\n                    }}\n                  />\n                </div>\n              </li>\n            </ul>\n          </nav>\n        </header>\n      </HashRouter>\n    );\n  }\n}\n","import './footer.css';\n\nfunction Footer(props) {\n  return (\n    <footer className=\"footer\">\n      <span className=\"footer__logo logo\">\n        <a className=\"footer__logo-link logo-link\" href=\"/\">JS Types Game</a>\n      </span>\n      <span className=\"copyright\">© Mad Pillow. Copyright 2021. All Rights Reserved.</span>\n    </footer>\n  )\n}\n\nexport default Footer;","import \"./helper.css\";\n\nfunction Helper(props) {\n  return (\n    <div\n      className={props.isVisible ? \"helper__container helper__container--visible\" : \"helper__container\"}\n      onClick={props.handleHelpMe}\n    >\n      <div className=\"helper\">{props.formulaHelper}</div>\n    </div>\n  );\n}\n\nexport default Helper;\n","import \"./modal.css\";\nimport React, { Component } from \"react\";\n\nexport default class Modal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshInput = this.refreshInput.bind(this);\n  }\n\n  refreshInput() {\n    this._input.focus();\n    this._input.value = \"\";\n  }\n\n  render() {\n    return (\n      <div className={this.props.modalIsVisible ? \"modal__container modal__container--visible\" : \"modal__container\"}>\n        <div className=\"modal__window\">\n          <h2 className=\"modal__title\">Wow!</h2>\n          <p className=\"modal__text\">\n            {`You have just passed the test of total ${this.props.tasksAmount} questions${\n              this.props.totalCorrect === this.props.tasksAmount\n                ? \". All answers are correct.\"\n                : ` with ${this.props.totalCorrect} correct and ${this.props.totalIncorrect} incorrect answers.`\n            }`}\n          </p>\n          <p className=\"modal__text\">{`Your score is ${this.props.getGameScore()}.`}</p>\n          <div\n            className={this.props.totalIncorrect === 0 ? \"modal__table-container--invisible\" : \"modal__table-container\"}\n          >\n            <table className=\"modal__table\">\n              <caption>Questions with wrong answers are listed below:</caption>\n              <thead>\n                <tr>\n                  <th>No</th>\n                  <th>Question</th>\n                  <th>Correct answer</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.props.wrongAnswers.map((item, index) => {\n                  return (\n                    <tr key={index}>\n                      <td>{index + 1}</td>\n                      <td>{item.formula}</td>\n                      <td>{item.correctAnswer}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          <form\n            className=\"modal__submit-score-form\"\n            onSubmit={e => {\n              this.props.handleSubmitScore(e);\n              this.refreshInput();\n            }}\n          >\n            <label className=\"modal__name-label\" htmlFor=\"modal__name-input\">\n              Enter your name and submit your result\n              <input\n                id=\"modal__name-input\"\n                onChange={e => this.props.handlePlayerName(e.target.value)}\n                ref={e => (this._input = e)}\n              ></input>\n            </label>\n            <button className=\"modal__submit-btn\">Submit score</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import \"./intro.css\";\n\nexport default function Intro(props) {\n  const lang = props.langEng ? \"en\" : \"ru\";\n  return (\n    <div className=\"intro__container section-container\">\n      <h2 className=\"intro__title section-title\">{props.content.intro.title[lang]}</h2>\n      <p className=\"intro__text\">{props.content.intro.text[lang]}</p>\n      <ol className=\"intro__list\">\n        <li className=\"intro__item\">{props.content.intro.item1[lang]}</li>\n        <li className=\"intro__item\">{props.content.intro.item2[lang]}</li>\n        <li className=\"intro__item\">{props.content.intro.item3[lang]}</li>\n        <li className=\"intro__item\">{props.content.intro.item4[lang]}</li>\n      </ol>\n      <button\n        className=\"intro__start-btn\"\n        onClick={() => {\n          window.location = \"./#/game\";\n        }}\n      >\n        {props.content.intro.btn[lang]}\n      </button>\n    </div>\n  );\n}\n","import './button.css';\n\nexport default function Button(props) {\n  const question = props.tasks[props.currentQuestionNo];\n  const answer = props.tasks[props.currentQuestionNo].allResults[props.index];\n  return (\n    <div className=\"gamepad__btn\" onMouseUp={(e) => {\n      props.handlePassedTask(e, question, answer);      \n    }\n    }>\n      <span className=\"gamepad__btn-text\">{answer}</span>\n    </div>\n  )\n}\n","import React, { PureComponent } from \"react\";\nimport \"./gamepad.css\";\nimport Button from \"./Button/Button\";\n\nexport default class Gamepad extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.props = props;\n\n    this.answersIndexes = this.randomizeAnswers();\n  }\n\n  randomizeAnswers() {\n    const randomIndexArray = [];\n    for (let i = 0; i < 4; i++) {\n      const randomIndex = Math.floor(Math.random() * 4);\n      if (randomIndexArray.includes(randomIndex)) {\n        i--;\n      } else {\n        randomIndexArray.push(randomIndex);\n      }\n    }\n    return randomIndexArray;\n  }\n\n  render() {\n    if (!this.props.isDone) {\n      this.answersIndexes = this.randomizeAnswers();\n    }\n    return (\n      <div className=\"gamepad\">\n        <div className=\"gamepad__formula\">\n          <span className=\"gamepad__formula-text\">{this.props.tasks[this.props.currentQuestionNo].formula}</span>\n        </div>\n        <div className=\"gamepad__btn-container\">\n          {this.answersIndexes.map(index => {\n            return (\n              <Button\n                index={index}\n                key={index}\n                tasks={this.props.tasks}\n                currentQuestionNo={this.props.currentQuestionNo}\n                handlePassedTask={this.props.handlePassedTask}\n                handleCompletedGame={this.props.handleCompletedGame}\n                handlePushedBtn={this.props.handlePushedBtn}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import \"./record.css\";\n\nexport default function Record(props) {\n  const locale = props.lang === \"en\" ? \"en-GB\" : \"RU\";\n  const toDate = new Intl.DateTimeFormat(locale, {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n  const dateStr = toDate.format(props.date);\n\n  return (\n    <li className=\"highscores__record\" title={dateStr}>\n      <span>{`${props.index}. ${props.name}`}</span>\n      <span>{props.score}</span>\n    </li>\n  );\n}\n","import \"./highscores.css\";\nimport Record from \"./Record/Record\";\n\nexport default function Highscores(props) {\n  const scoreRecords = JSON.parse(localStorage.getItem(\"scoreRecords\")) ?? [{ name: \"No records\" }];\n  const lang = props.langEng ? \"en\" : \"ru\";\n\n  return (\n    <div className=\"highscores__container section-container\">\n      <h2 className=\"highscores__title section-title\">{props.content.highscores.title[lang]}</h2>\n      <ul className=\"highscores__list\">\n        {scoreRecords.map((record, index) => {\n          return (\n            <Record\n              {...props}\n              key={index}\n              index={index + 1}\n              name={record.name}\n              score={record.score}\n              date={record.date}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/question-diamond-fill.154c3253.svg\";","import \"./helpMeBtn.css\";\nimport questionIco from \"./question-diamond-fill.svg\";\n\nexport default function HelpMeBtn(props) {\n  return (\n    <button\n      className={!props.hintsOn ? \"help-me-btn help-me-btn--disabled\" : \"help-me-btn\"}\n      onClick={props.handleHelpMe}\n      style={{ backgroundImage: `url(${questionIco})` }}\n    ></button>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./wheel.css\";\n\nexport default class Wheel extends Component {\n  render() {\n    return (\n      <div>\n        <label htmlFor=\"wheel\">\n          <div className=\"custom-wheel__container\">\n            <div className=\"custom-wheel__ruler\"></div>\n          </div>\n          <input\n            type=\"range\"\n            ref={e => (this._range = e)}\n            id=\"wheel\"\n            min=\"5\"\n            max=\"30\"\n            step=\"5\"\n            defaultValue={this.props.defaultValue}\n            onChange={this.props.handleWheel}\n          ></input>\n        </label>\n      </div>\n    );\n  }\n}\n","import Switch from \"../../Shared/Switch/switch\";\nimport \"./options.css\";\nimport Wheel from \"./Wheel/Wheel\";\n\nexport default function Options(props) {\n  const lang = props.langEng ? \"en\" : \"ru\";\n  return (\n    <div className=\"options__container section-container\">\n      <h2 className=\"options__title section-title\">{props.content.options.title[lang]}</h2>\n      <ul className=\"options__list\">\n        <li className=\"options__item\">\n          <div>{props.content.options.timer[lang]}</div>\n          <Switch\n            config={{ unit: \"timer\", option: \"timerOn\", defaultValue: props.defaultGameConfig[\"timerOn\"] }}\n            handleSwitch={props.handleSwitch}\n          />\n        </li>\n        <li className=\"options__item\">\n          <div>{props.content.options.hints[lang]}</div>\n          <Switch\n            config={{ unit: \"hints\", option: \"hintsOn\", defaultValue: props.defaultGameConfig[\"hintsOn\"] }}\n            handleSwitch={props.handleSwitch}\n          />\n        </li>\n        <li className=\"options__item\">\n          <div>{props.content.options.nosimple[lang]}</div>\n          <Switch\n            config={{ unit: \"noSimple\", option: \"noSimpleOn\", defaultValue: props.defaultGameConfig[\"noSimpleOn\"] }}\n            handleSwitch={props.handleSwitch}\n          />\n        </li>\n        <li className=\"options__item\">\n          <div>{props.content.options.questAmount[lang]}</div>\n          <Wheel handleWheel={props.handleWheel} defaultValue={props.defaultGameConfig.questAmount} />\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App/App.js\"\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n)"],"sourceRoot":""}